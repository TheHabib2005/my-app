const saveuserInfo = async (user: UserResponseType | undefined) => {

        setError({ error: false, message: "" });
        try {
            setLoading(true);
            let response = await fetch("http://localhost:8000/user/save-user", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(user),
                credentials: "include"
            });
            let data = await response.json();

            if (!response.ok) {
                toast.error(data.message);
                setError({ error: true, message: data.message });
                return;
            }

            if (data.success) {
                toast.success(data.message);
                await delay(1000);
                window.location.href = "/";
                // lo.setItem("sessionStorage", "dgfsfg")
            }

        } catch (error) {
            setError({ error: true, message: "something was wroing ! " });
            toast.error("something was wrong ! ");
        } finally {
            setLoading(false);
        }


    }


    const googleLogin = useGoogleLogin({
        onSuccess: async (tokenResponse) => {
            console.log(tokenResponse);
            const accessToken = tokenResponse.access_token;
            let userData: UserResponseType | undefined = await getUserData(accessToken);
            saveuserInfo(userData)

        }
    })
 <button className="w-full max-w-xs font-bold shadow-sm rounded-lg p-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline" onClick={async () => {

                                    if (navigator.onLine) {
                                        googleLogin()
                                    } else {
                                        setLoading(true);
                                        await delay(3000);
                                        setLoading(false);
                                        setError({
                                            error: true,
                                            message: "please conncet to the internet"
                                        })
                                        toast.error("please conncet to the internet")
                                    }
                                }}>








                                 const getUserData = async (accessToken: string): Promise<UserResponseType | undefined> => {
        const apiUrl = 'https://www.googleapis.com/oauth2/v3/userinfo';
        try {
            const response = await fetch(apiUrl, {
                headers: {
                    Authorization: `Bearer ${accessToken}`,
                },
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();
            const userinfo: UserResponseType = {
                username: data.name,
                email: data.email,
                profilePic: data.picture,
                password: "googleuseracount"
            };
            return userinfo;
        } catch (error) {
            console.error('Error fetching data from Google API:', error);
            return undefined;
        }
    };